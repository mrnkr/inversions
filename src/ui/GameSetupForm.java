/*
 * The MIT License
 *
 * Copyright 2017 MrNKR.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
package ui;

import data.MySystem;
import data.Player;
import java.awt.event.WindowEvent;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import helpers.FrameDelegateInterface;

/**
 *
 * @author - Darío Dathaguy - Programación 2 - Número de estudiante: 220839 - Universidad ORT 
 * @author - Álvaro Nicoli - Programación 2 - Número de estudiante: 220159 - Universidad ORT
 */

public class GameSetupForm extends javax.swing.JFrame {
    private MySystem system;
    private FrameDelegateInterface myDelegate;
    private FrameDelegateInterface gameViewDelegate;
    private boolean isOpeningGame;

    /**
     * Creates new form GameSetupForm
     * @param system
     * @param myDelegate
     * @param gameViewDelegate
     */
    public GameSetupForm(MySystem system, FrameDelegateInterface myDelegate, FrameDelegateInterface gameViewDelegate) {
        this.system = system;
        this.myDelegate = myDelegate;
        this.gameViewDelegate = gameViewDelegate;
        
        initComponents();
        populateCombos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mySizeSelectionRadioButtons = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        myPlayer1SelectionComboBox = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        myPlayer2SelectionComboBox = new javax.swing.JComboBox<>();
        my3RadioButton = new javax.swing.JRadioButton();
        my5RadioButton = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        myOkButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Preparar Juego");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setText("Jugador 1");

        myPlayer1SelectionComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel2.setText("Jugador 2");

        myPlayer2SelectionComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        mySizeSelectionRadioButtons.add(my3RadioButton);
        my3RadioButton.setSelected(true);
        my3RadioButton.setText("3");

        mySizeSelectionRadioButtons.add(my5RadioButton);
        my5RadioButton.setText("5");

        jLabel3.setText("Tamano del Tablero");

        myOkButton.setText("OK");
        myOkButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myOkButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(38, 38, 38)
                        .addComponent(my3RadioButton)
                        .addGap(18, 18, 18)
                        .addComponent(my5RadioButton)
                        .addGap(0, 103, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(myOkButton))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(myPlayer2SelectionComboBox, 0, 228, Short.MAX_VALUE)
                                    .addComponent(myPlayer1SelectionComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(38, 38, 38))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(myPlayer1SelectionComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(myPlayer2SelectionComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(my3RadioButton)
                    .addComponent(my5RadioButton))
                .addGap(18, 18, 18)
                .addComponent(myOkButton)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void populateCombos() {
        String[] players = this.system.getPlayerList()
                .stream()
                .map(val -> {
                    return val.getAlias();
                })
                .toArray(String[]::new);
        
        this.myPlayer1SelectionComboBox.setModel(new DefaultComboBoxModel(players));
        this.myPlayer2SelectionComboBox.setModel(new DefaultComboBoxModel(players));
    }
    
    private void myOkButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myOkButtonActionPerformed
        if (this.myPlayer1SelectionComboBox.getSelectedItem().equals(this.myPlayer2SelectionComboBox.getSelectedItem())) {
            JOptionPane.showMessageDialog(this, "Elige dos jugadores distintos", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        this.isOpeningGame = true;
        
        Player player1 = this.system.getPlayerList().get(this.myPlayer1SelectionComboBox.getSelectedIndex());
        Player player2 = this.system.getPlayerList().get(this.myPlayer2SelectionComboBox.getSelectedIndex());
        int size = this.my3RadioButton.isSelected() ? 3 : 5;
        
        this.system.startNewGame(player1, player2, size);
        
        java.awt.EventQueue.invokeLater(() -> {
            this.myDelegate.onFrameClosing("opening-game");
            new GameView(this.system, this.gameViewDelegate).setVisible(true);
        });
        
        this.dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
    }//GEN-LAST:event_myOkButtonActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        if (!this.isOpeningGame) {
            this.myDelegate.onFrameClosing("not-opening-game");
        }
    }//GEN-LAST:event_formWindowClosing
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JRadioButton my3RadioButton;
    private javax.swing.JRadioButton my5RadioButton;
    private javax.swing.JButton myOkButton;
    private javax.swing.JComboBox<String> myPlayer1SelectionComboBox;
    private javax.swing.JComboBox<String> myPlayer2SelectionComboBox;
    private javax.swing.ButtonGroup mySizeSelectionRadioButtons;
    // End of variables declaration//GEN-END:variables
}
